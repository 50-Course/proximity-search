volumes:
  db_data: {}

services:
  # web:
  #   container_name: proximity_web_ui
  #   build: docker/web.Dockerfile
  #   command: python manage.py runserver
  backend:
    container_name: proximity_web_backend
    build:
      context: .
      dockerfile: docker/dockerfiles/backend/Dockerfile
  db:
    container_name: proximity_search_db
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: spatial_db
      POSTGRES_USER: sudo_user
      POSTGRES_PASSWORD: IamSudo
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "max_connections=300"]

  # Additional layer for PostGIS
  # Service only runs after the db service is up and running
  postgis:
    container_name: proximity_search_postgis
    image: postgis/postgis:13-3.1-alpine
    environment:
      POSTGRES_DB: spatial_db
      POSTGRES_USER: sudo_user
      POSTGRES_PASSWORD: IamSudo
    ports:
      - "5433:5432"
    restart: always
    depends_on:
      - db
    volumes:
      - ./docker/entrypoints/postgis.sh:/postgis.sh
    entrypoint: ["sh", "/postgis.sh"]

  search:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
  cache:
    container_name: redis
    image: redis:6.0.9-alpine
    ports:
      - "6379:6379"
